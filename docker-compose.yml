version: "2.2"
services:
  es01:
    image: docker.elastic.co/elasticsearch/elasticsearch:7.12.1
    container_name: es01
    environment:
      - discovery.type=single-node
    ulimits:
      memlock:
        soft: -1
        hard: -1
    volumes:
      - data01:/usr/share/elasticsearch/data
    ports:
      - 9200:9200
    networks:
      - elastic

  kib01:
    image: docker.elastic.co/kibana/kibana:7.12.1
    container_name: kib01
    ports:
      - 5601:5601
    environment:
      ELASTICSEARCH_URL: http://es01:9200
      ELASTICSEARCH_HOSTS: '["http://es01:9200"]'
    networks:
      - elastic

  esDatabase:
    image: postgres:13
    container_name: esDatabase
    volumes:
      - es_db_data:/var/lib/postgresql/data
      - ./init.sql:/docker-entrypoint-initdb.d/init.sql
    ports:
      - "5435:5432"
    environment:
      POSTGRES_PASSWORD: postgres
      POSTGRES_USER: postgres

  # logstash:
  #   build:
  #     dockerfile: ${PWD}/Dockerfile
  #     context: ${PWD}/
  #   environment:
  #     - LOGSTASH_JDBC_URL=jdbc:postgresql://esDatabase:5435/postgres
  #     - LOGSTASH_JDBC_DRIVER=org.postgresql.Driver
  #     - LOGSTASH_JDBC_DRIVER_JAR_LOCATION=/usr/share/logstash/logstash-core/lib/jars/postgresql.jar
  #     - LOGSTASH_JDBC_USERNAME=postgres
  #     - LOGSTASH_JDBC_PASSWORD=postgres
  #     - LOGSTASH_ELASTICSEARCH_HOST=http://es01:9200
  #   volumes:
  #     - ./postgres-jdbc-input.conf:/usr/share/logstash/pipeline/logstash.conf
  #   ports:
  #     - 9600:9600
  #     - 5044:5044
  #   networks:
  #     - elastic
  #   depends_on:
  #     - es01
  #     - kib01
  #     - esDatabase

volumes:
  data01:
    driver: local
  es_db_data:

networks:
  elastic:
    driver: bridge
